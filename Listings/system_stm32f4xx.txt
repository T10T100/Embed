; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --debug -c --asm --interleave -o.\objects\system_stm32f4xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\system_stm32f4xx.d --cpu=Cortex-M4.fp --apcs=interwork -O1 -Otime --diag_suppress=9931 -I.\device\GUI\inc -I.\device\hardware\inc -I.\device\init\inc -I.\misc\inc -I.\user\inc -I..\tester_1.03 -I.\memory\inc -I.\drivers\inc -IE:\KeilProj\tester_1.03\tester_1.03\tester_1.03\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.4.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.4.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F417xx -DSTM32F417xx -DColorDepthBpp16 -Dtftili9486 -DSOFTWARE_GL -DGUI_ALLIGN_LAYSIZE_TO_POW2 --omf_browse=.\objects\system_stm32f4xx.crf RTE\Device\STM32F417IETx\system_stm32f4xx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;169      */
;;;170    void SystemInit(void)
000000  482e              LDR      r0,|L1.188|
;;;171    {
;;;172      /* FPU settings ------------------------------------------------------------*/
;;;173      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;174        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
000002  6801              LDR      r1,[r0,#0]
000004  f4410170          ORR      r1,r1,#0xf00000
000008  6001              STR      r1,[r0,#0]
;;;175      #endif
;;;176      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;177      /* Set HSION bit */
;;;178      RCC->CR |= (uint32_t)0x00000001;
00000a  482d              LDR      r0,|L1.192|
00000c  6801              LDR      r1,[r0,#0]
00000e  f0410101          ORR      r1,r1,#1
000012  6001              STR      r1,[r0,#0]
;;;179    
;;;180      /* Reset CFGR register */
;;;181      RCC->CFGR = 0x00000000;
000014  4a2b              LDR      r2,|L1.196|
000016  2100              MOVS     r1,#0
000018  6011              STR      r1,[r2,#0]
;;;182    
;;;183      /* Reset HSEON, CSSON and PLLON bits */
;;;184      RCC->CR &= (uint32_t)0xFEF6FFFF;
00001a  6802              LDR      r2,[r0,#0]
00001c  f4222210          BIC      r2,r2,#0x90000
000020  f0227280          BIC      r2,r2,#0x1000000
000024  6002              STR      r2,[r0,#0]
;;;185    
;;;186      /* Reset PLLCFGR register */
;;;187      RCC->PLLCFGR = 0x24003010;
000026  1d03              ADDS     r3,r0,#4
000028  4a27              LDR      r2,|L1.200|
00002a  601a              STR      r2,[r3,#0]
;;;188    
;;;189      /* Reset HSEBYP bit */
;;;190      RCC->CR &= (uint32_t)0xFFFBFFFF;
00002c  6802              LDR      r2,[r0,#0]
00002e  f4222280          BIC      r2,r2,#0x40000
000032  6002              STR      r2,[r0,#0]
;;;191    
;;;192      /* Disable all interrupts */
;;;193      RCC->CIR = 0x00000000;
000034  4825              LDR      r0,|L1.204|
000036  6001              STR      r1,[r0,#0]
;;;194    
;;;195    #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
;;;196      SystemInit_ExtMemCtl(); 
;;;197    #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
;;;198    
;;;199      /* Configure the Vector Table location add offset address ------------------*/
;;;200    #ifdef VECT_TAB_SRAM
;;;201      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;202    #else
;;;203      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
000038  4925              LDR      r1,|L1.208|
00003a  0658              LSLS     r0,r3,#25
00003c  6008              STR      r0,[r1,#0]
;;;204    #endif
;;;205    }
00003e  4770              BX       lr
;;;206    
                          ENDP

                  SystemCoreClockUpdate PROC
;;;242      */
;;;243    void SystemCoreClockUpdate(void)
000040  b430              PUSH     {r4,r5}
;;;244    {
;;;245      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
;;;246      
;;;247      /* Get SYSCLK source -------------------------------------------------------*/
;;;248      tmp = RCC->CFGR & RCC_CFGR_SWS;
000042  4c20              LDR      r4,|L1.196|
000044  6820              LDR      r0,[r4,#0]
000046  f000000c          AND      r0,r0,#0xc
;;;249    
;;;250      switch (tmp)
;;;251      {
;;;252        case 0x00:  /* HSI used as system clock source */
;;;253          SystemCoreClock = HSI_VALUE;
00004a  4d22              LDR      r5,|L1.212|
00004c  4922              LDR      r1,|L1.216|
00004e  2800              CMP      r0,#0                 ;250
000050  d011              BEQ      |L1.118|
;;;254          break;
;;;255        case 0x04:  /* HSE used as system clock source */
;;;256          SystemCoreClock = HSE_VALUE;
000052  f8dfc088          LDR      r12,|L1.220|
000056  2804              CMP      r0,#4                 ;250
000058  d00f              BEQ      |L1.122|
00005a  2808              CMP      r0,#8                 ;250
00005c  d010              BEQ      |L1.128|
;;;257          break;
;;;258        case 0x08:  /* PLL used as system clock source */
;;;259    
;;;260          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;261             SYSCLK = PLL_VCO / PLL_P
;;;262             */    
;;;263          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
;;;264          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
;;;265          
;;;266          if (pllsource != 0)
;;;267          {
;;;268            /* HSE used as PLL clock source */
;;;269            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
;;;270          }
;;;271          else
;;;272          {
;;;273            /* HSI used as PLL clock source */
;;;274            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
;;;275          }
;;;276    
;;;277          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
;;;278          SystemCoreClock = pllvco/pllp;
;;;279          break;
;;;280        default:
;;;281          SystemCoreClock = HSI_VALUE;
00005e  600d              STR      r5,[r1,#0]  ; SystemCoreClock
                  |L1.96|
;;;282          break;
;;;283      }
;;;284      /* Compute HCLK frequency --------------------------------------------------*/
;;;285      /* Get HCLK prescaler */
;;;286      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000060  6820              LDR      r0,[r4,#0]
000062  f3c01203          UBFX     r2,r0,#4,#4
000066  481e              LDR      r0,|L1.224|
000068  5c80              LDRB     r0,[r0,r2]
;;;287      /* HCLK frequency */
;;;288      SystemCoreClock >>= tmp;
00006a  680a              LDR      r2,[r1,#0]  ; SystemCoreClock
00006c  fa22f000          LSR      r0,r2,r0
000070  6008              STR      r0,[r1,#0]  ; SystemCoreClock
000072  bc30              POP      {r4,r5}               ;254
;;;289    }
000074  4770              BX       lr
                  |L1.118|
000076  600d              STR      r5,[r1,#0]            ;253  ; SystemCoreClock
000078  e7f2              B        |L1.96|
                  |L1.122|
00007a  f8c1c000          STR      r12,[r1,#0]           ;256  ; SystemCoreClock
00007e  e7ef              B        |L1.96|
                  |L1.128|
000080  4a18              LDR      r2,|L1.228|
000082  6810              LDR      r0,[r2,#0]            ;263
000084  f3c05380          UBFX     r3,r0,#22,#1          ;263
000088  6810              LDR      r0,[r2,#0]            ;264
00008a  f000003f          AND      r0,r0,#0x3f           ;264
00008e  b133              CBZ      r3,|L1.158|
000090  fbbcf0f0          UDIV     r0,r12,r0             ;269
000094  6813              LDR      r3,[r2,#0]            ;269
000096  f3c31388          UBFX     r3,r3,#6,#9           ;269
00009a  4358              MULS     r0,r3,r0              ;269
00009c  e005              B        |L1.170|
                  |L1.158|
00009e  fbb5f0f0          UDIV     r0,r5,r0              ;274
0000a2  6813              LDR      r3,[r2,#0]            ;274
0000a4  f3c31388          UBFX     r3,r3,#6,#9           ;274
0000a8  4358              MULS     r0,r3,r0              ;274
                  |L1.170|
0000aa  6812              LDR      r2,[r2,#0]            ;277
0000ac  f3c24201          UBFX     r2,r2,#16,#2          ;277
0000b0  1c52              ADDS     r2,r2,#1              ;277
0000b2  0052              LSLS     r2,r2,#1              ;277
0000b4  fbb0f0f2          UDIV     r0,r0,r2              ;278
0000b8  6008              STR      r0,[r1,#0]            ;278  ; SystemCoreClock
0000ba  e7d1              B        |L1.96|
;;;290    
                          ENDP

                  |L1.188|
                          DCD      0xe000ed88
                  |L1.192|
                          DCD      0x40023800
                  |L1.196|
                          DCD      0x40023808
                  |L1.200|
                          DCD      0x24003010
                  |L1.204|
                          DCD      0x4002380c
                  |L1.208|
                          DCD      0xe000ed08
                  |L1.212|
                          DCD      0x00f42400
                  |L1.216|
                          DCD      ||.data||
                  |L1.220|
                          DCD      0x017d7840
                  |L1.224|
                          DCD      ||.data||+0x4
                  |L1.228|
                          DCD      0x40023804

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||.text||
                          DCD      0x00000001

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00f42400
                  AHBPrescTable
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  01020304          DCB      0x01,0x02,0x03,0x04
000010  06070809          DCB      0x06,0x07,0x08,0x09

;*** Start embedded assembler ***

#line 1 "RTE\\Device\\STM32F417IETx\\system_stm32f4xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67___Z7__REV16j|
#line 138 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.3.0\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_system_stm32f4xx_c_5d646a67___Z7__REV16j| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67___Z7__REVSHi|
#line 153
|__asm___18_system_stm32f4xx_c_5d646a67___Z7__REVSHi| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67___Z5__RRXj|
#line 328
|__asm___18_system_stm32f4xx_c_5d646a67___Z5__RRXj| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
