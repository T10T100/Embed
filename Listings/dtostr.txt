; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp11 --list --debug -c --asm --interleave -o.\objects\dtostr.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\dtostr.d --cpu=Cortex-M4.fp --apcs=interwork -O1 -Otime --diag_suppress=9931 -I.\device\GUI\inc -I.\device\hardware\inc -I.\device\init\inc -I.\misc\inc -I.\user\inc -I..\tester_1.03 -I.\memory\inc -I.\drivers\inc -I.\res -I..\Embed -IE:\KeilProj\Embed\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.4.0 -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.4.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F417xx -DSTM32F417xx -DColorDepthBpp16 -Dtftili9486 -DSOFTWARE_GL -DGUI_ALLIGN_LAYSIZE_TO_POW2 --omf_browse=.\objects\dtostr.crf device\GUI\src\dtostr.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _ZN32_INTERNAL_10_dtostr_cpp_7ce28be13STR7ReverseEPc PROC ; [local to dtostr_cpp]::STR::Reverse(char*)
;;;4      
;;;5      static char *STR::Reverse (char *str)
000000  b510              PUSH     {r4,lr}
;;;6      {
000002  4604              MOV      r4,r0
;;;7        char *j;
;;;8        int32_t c;
;;;9       
;;;10       j = str + strlen(str) - 1;
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       strlen
00000a  4420              ADD      r0,r0,r4
00000c  1e40              SUBS     r0,r0,#1
;;;11       while(str < j) {
00000e  4284              CMP      r4,r0
000010  d207              BCS      |L1.34|
                  |L1.18|
;;;12         c = *str;
000012  7821              LDRB     r1,[r4,#0]
;;;13         *str++ = *j;
000014  7802              LDRB     r2,[r0,#0]
000016  f8042b01          STRB     r2,[r4],#1
;;;14         *j-- = c;
00001a  f8001901          STRB     r1,[r0],#-1
00001e  4284              CMP      r4,r0                 ;11
000020  d3f7              BCC      |L1.18|
                  |L1.34|
;;;15       }	
;;;16     	return j;	
;;;17     }
000022  bd10              POP      {r4,pc}
;;;18     
                          ENDP

                  _ZN3STR4itoaEiPcj PROC ; STR::itoa(int, char*, unsigned)
;;;19     char *STR::itoa (int32_t val, char *str, uint32_t base)
000024  b430              PUSH     {r4,r5}
;;;20     {
000026  4603              MOV      r3,r0
;;;21       int32_t i, sign;
;;;22      
;;;23       if ((sign = val) < 0)              /* record sign */
000028  1e1d              SUBS     r5,r3,#0
00002a  da00              BGE      |L1.46|
;;;24           val = -val;                    /* make n positive */
00002c  425b              RSBS     r3,r3,#0
                  |L1.46|
;;;25       i = 0;
00002e  2000              MOVS     r0,#0
                  |L1.48|
;;;26       do {                               /* generate digits in reverse order */
;;;27           str[i++] = val % base + '0';   /* get next digit */
000030  fbb3fcf2          UDIV     r12,r3,r2
000034  fb023c1c          MLS      r12,r2,r12,r3
000038  4604              MOV      r4,r0
00003a  f10c0c30          ADD      r12,r12,#0x30
00003e  1c40              ADDS     r0,r0,#1
000040  f801c004          STRB     r12,[r1,r4]
;;;28       } while ((val /= base) > 0);       /* delete it */
000044  fbb3f3f2          UDIV     r3,r3,r2
000048  2b00              CMP      r3,#0
00004a  dcf1              BGT      |L1.48|
;;;29       if (sign < 0)
00004c  2d00              CMP      r5,#0
00004e  da03              BGE      |L1.88|
;;;30           str[i++] = '-';
000050  232d              MOVS     r3,#0x2d
000052  4602              MOV      r2,r0
000054  1c40              ADDS     r0,r0,#1
000056  548b              STRB     r3,[r1,r2]
                  |L1.88|
;;;31       str[i] = '\0';
000058  2200              MOVS     r2,#0
00005a  540a              STRB     r2,[r1,r0]
;;;32       
;;;33       return Reverse(str);	
00005c  bc30              POP      {r4,r5}
00005e  4608              MOV      r0,r1
000060  e7fe              B        _ZN32_INTERNAL_10_dtostr_cpp_7ce28be13STR7ReverseEPc ; [local to dtostr_cpp]::STR::Reverse(char*)
;;;34     }
;;;35     
                          ENDP


                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||.text||
                          DCD      0x00000001
